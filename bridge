#!/bin/bash
pid=0
absolutepath="$( cd $(dirname $0) ; pwd -P )"
filestart="$absolutepath/start.js"
filetest="$absolutepath/test.js"

usage () {
	echo "Flower Bridge: See Flowers fall on the bridge"
	echo "Every 15 minutes (default), all of your Flower Power will be update"
	echo
	echo "USAGE: ./bridge cmd [delay]"
	echo
	echo "ARGUMENTS:"
	echo "	cmd:"
	echo "		display:	Lannch and show updating into your console"
	echo "		background:	Launch updatind to background. To know what happening: \`$ ./updatedb\`"
	echo "		restart:	Stop the current program and re-launch. If no program is running, 'restart' is similar as 'background'"
	echo "		status:		Show if the program is running or not"
	echo "		stop: 		Stop all processings and kill the program"
	echo
	echo "	delay (optional):"
	echo "		Specify the loop time in minute"
	echo
	echo "EXAMPLES:"
	echo "	./bridge display		: (loop every 15 minutes)"
	echo "	./bridge display 60		: (loop every 1 hour)"
	echo "	./bridge background 1440	: (loop every day without render in console)"
	echo "	./bridge stop			: (Stop the program)"
	echo "	./bridge restart		: (Restart the program)"
	echo
	echo "AUTHOR:"
	echo "	Written by Bruno Sautron."
}

welcome () {
	echo
	echo "-- Flower Bridge --"
	echo
}

pidexist () {
	kill -0 $1 2> /dev/null
}


# @return
# 0 -> running
# 1 -> stoping
# 2 -> waiting
isrunning () {
	pid=$(head -n 1 "$absolutepath/.flowerIsRunning" 2> /dev/null)
	if [ -z "$pid" ]
	then
		echo "[---] No program is running"
		return 1
	else
		pidexist $pid
		if [ "$?" == 0 ]
		then
			echo "[running] A program is running - $pid"
			return 0
		else
			crontab -u pi -l | grep -n "node-flower-bridge\/bridge background$" > /dev/null
			if [ $? == 0 ]
			then
				echo "[waiting] A program is on waiting, it will restart it self "
				return 2
			fi
		fi
		echo "[--+] No program is running"
		return 1
	fi
}

statusit () {
	welcome
	isrunning
	exit 0
}

displayit () {
	welcome
	isrunning
	status="$?"
	if [ "$status" == 1 ]
	then
		echo node $1 $2
		node $1 $2
	else
		stopit
		node $1 $2
	fi
}

backgroundit () {
	welcome
	isrunning
	status="$?"
	if [ "$status" == 1 ]
	then
		node $1 $2 2> $absolutepath/trace.log 1> /dev/null &
		echo $! > "$absolutepath/.flowerIsRunning"
		echo "Starting bridge in background"
		echo "node $1 $2 2> trace.log 1> /dev/null &"
		echo "$> $absolutepath/bridge status"
		installit
	elif [ "$status" == 2 ]
	then
		node $1 $2 2> $absolutepath/trace.log 1> /dev/null &
		echo $! > "$absolutepath/.flowerIsRunning"
		echo "The bridge wakup"
	fi
}

stopit () {
	isrunning $> /dev/null
	status="$?"
	if [ "$status" == 0 ]
	then
		killit
		crontab -u pi -l | sed "/node-flower-bridge\/bridge background$/d" | crontab
		echo "Bye :)"
	elif [ "$status" == 2 ]
	then
		crontab -u pi -l | sed "/node-flower-bridge\/bridge background$/d" | crontab
	fi
}

restartit () {
	stopit
	backgroundit $1 $2
}

killit () {
	kill $pid
	rm -f "$absolutepath/.flowerIsRunning"
	echo "kill" $pid
	pid=0
}

installit () {
	crontab -l | grep -n "node-flower-bridge\/bridge background$" > /dev/null
	if [ "$?" == 1 ]
	then
		crontab -u pi -l > $absolutepath/mycron
		echo "*/15 * * * * $absolutepath/bridge background" >> $absolutepath/mycron
		crontab -u pi $absolutepath/mycron
		rm $absolutepath/mycron
	fi
}

if [ -z "$1" ]
then
	usage
else
	if [ "$1" == "install" ]
	then
		installit
	elif [ "$1" == "display" ]
	then
		displayit $filestart $2
	elif [ "$1" == "background" ]
	then
		backgroundit $filestart $2
	elif [ "$1" == "stop" ]
	then
		stopit
	elif [ $1 == "restart" ]
	then
		restartit $filestart $2
	elif [ $1 == "running" ]
	then
		isrunning
	elif [ $1 == "crontab" ]
	then
		echo pi:
		crontab -u pi -l
		echo root:
		sudo crontab -l
	elif [ $1 == "status" ]
	then
		statusit
	elif [ $1 == "test" ]
	then
		displayit $filetest $2
	else
		usage
	fi
fi
